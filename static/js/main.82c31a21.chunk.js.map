{"version":3,"sources":["images/camel.jpg","images/dolphin.jpg","images/snow-leopard.jpg","components/AnimalContainer.js","components/TextContainer.js","components/MainContainer.js","App.js","reportWebVitals.js","index.js"],"names":["AnimalContainer","className","onClick","this","props","randomFact","animalImage","displayFact","React","Component","TextContainer","animals","camel","image","src","require","default","alt","facts","dolphin","snowLeopard","MainContainer","handleClick","e","selectedAnimal","target","animalFacts","Object","values","randomNumber","Math","floor","random","length","setState","state","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+IAAA,OAAe,cAA0B,mC,6BCAzC,OAAe,cAA0B,qC,6BCAzC,OAAe,cAA0B,0C,mHCInCA,E,4JAEJ,WACI,OACI,qBAAKC,UAAU,mBAAf,SACG,sBAAKC,QAASC,KAAKC,MAAMC,WAAzB,UACGF,KAAKC,MAAME,YACXH,KAAKC,MAAMG,qB,GAPGC,IAAMC,WAmBrBT,ICnBTU,E,4JAEJ,WACI,OACI,qBAAKT,UAAU,iBAAf,SACG,qBAAKC,QAASC,KAAKC,MAAMC,WAAzB,SACE,4BAAIF,KAAKC,MAAMG,sB,GANFC,IAAMC,WAkBnBC,ICjBTC,EAAU,CACdC,MAAO,CACLC,MACE,qBACEZ,UAAU,eACVa,IAAKC,EAAQ,IAAuBC,QACpCC,IAAI,UAERC,MAAO,CACL,mEACA,oGACA,oFACA,4EAIJC,QAAS,CACPN,MACE,qBACEZ,UAAU,eACVa,IAAKC,EAAQ,IAAyBC,QACtCC,IAAI,YAERC,MAAO,CACL,iGACA,8EACA,+DAIJE,YAAa,CACXP,MACE,qBACEZ,UAAU,eACVa,IAAKC,EAAQ,IAA8BC,QAC3CC,IAAI,gBAERC,MAAO,CACL,qDACA,wFACA,uEAoDSG,E,kDA9Cb,WAAYjB,GAAQ,IAAD,8BACjB,cAAMA,IAMRkB,YAAc,SAACC,GAEb,IAAIC,EAAiBD,EAAEE,OAAOR,IAC1BS,EAAcC,OAAOC,OAAOjB,EAAQa,GAAgBN,OACpDW,EAAcC,KAAKC,MAAMD,KAAKE,SAAWN,EAAYO,QAEzD,EAAKC,SAAS,CACZ3B,YAAamB,EAAYG,MAZ3B,EAAKM,MAAQ,CACX5B,YAAa,oFAHE,E,0CAkBnB,WACE,OACE,8BACE,sBAAKN,UAAU,iBAAf,UACE,cAAC,EAAD,CACEI,WAAaF,KAAKmB,YAClBf,YAAcJ,KAAKgC,MAAM5B,cAE3B,sBAAKN,UAAU,oBAAf,UACE,cAAC,EAAD,CACEK,YAAcK,EAAQC,MAAMC,MAC5BR,WAAaF,KAAKmB,cAEpB,cAAC,EAAD,CACEhB,YAAcK,EAAQQ,QAAQN,MAC9BR,WAAaF,KAAKmB,cAEpB,cAAC,EAAD,CACEhB,YAAcK,EAAQS,YAAYP,MAClCR,WAAaF,KAAKmB,0B,GAtCJd,IAAMC,WC7C5B2B,E,4JACJ,WACE,OACE,sBAAKnC,UAAU,gBAAf,UACE,oBAAIA,UAAU,QAAd,iCACA,cAAC,EAAD,W,GALUO,IAAMC,WAWT2B,ICJAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.82c31a21.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/camel.ea1061c2.jpg\";","export default __webpack_public_path__ + \"static/media/dolphin.024a0de8.jpg\";","export default __webpack_public_path__ + \"static/media/snow-leopard.f6a64789.jpg\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nclass AnimalContainer extends React.Component {\n\n  render() {\n      return (\n          <div className=\"animal-container\">\n             <div onClick={this.props.randomFact}>\n               {this.props.animalImage}\n               {this.props.displayFact}\n              </div>\n          </div>\n      )\n    }\n}\n\n// PropTypes\nAnimalContainer.propTypes = {\n  animalImage: PropTypes.object.isRequired\n}\n\nexport default AnimalContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nclass TextContainer extends React.Component {\n\n  render() {\n      return (\n          <div className=\"text-container\">\n             <div onClick={this.props.randomFact}>\n               <p>{this.props.displayFact}</p>\n              </div>\n          </div>\n      )\n    }\n}\n\n// PropTypes\nTextContainer.propTypes = {\n  displayFact: PropTypes.string.isRequired\n}\n\nexport default TextContainer;\n","import React from 'react';\nimport AnimalContainer from './AnimalContainer';\nimport TextContainer from './TextContainer';\n\n\nconst animals = {\n  camel: {\n    image:\n      <img\n        className=\"animal-image\"\n        src={require('../images/camel.jpg').default}\n        alt=\"camel\"\n      />,\n    facts: [\n      'Camels have large, flat feet to spread their weight on the sand.',\n      'Camels have thick fur on the top of the body for shade, and thin fur elsewhere to help heat loss.',\n      'Camels have slit-like nostrils and two rows of eyelashes - to help keep out sand.',\n      'Camels have a large surface-area to volume ratio to increase heat loss.'\n    ],\n  },\n\n  dolphin: {\n    image:\n      <img\n        className=\"animal-image\"\n        src={require('../images/dolphin.jpg').default}\n        alt=\"dolphin\"\n      />,\n    facts: [\n      'Dolphin\\'s sleek, elogated (streamlined) shape allows them to swim through the water with ease.',\n      'Dolphins have a decreased surface-area to volume ratio to reduce heat loss.',\n      'A dolphin\\'s body fat provides insulation against the cold.'\n    ],\n  },\n\n  snowLeopard: {\n    image:\n      <img\n        className=\"animal-image\"\n        src={require('../images/snow-leopard.jpg').default}\n        alt=\"snowLeopard\"\n      />,\n    facts: [\n      'Snow leopards have small ears to reduce heat loss.',\n      'Snow leopards have patterned fur gives them camouflage in their snowy, rocky habitat.',\n      'Snow leopards have large feet to spread their weight on the snow.'\n    ],\n  }\n}\n\nclass MainContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayFact: 'Click on the picture to find out how the animal has adapted to it\\'s environment.'\n    };\n  }\n\n  handleClick = (e) => {\n    // Collects alt of animal and uses alt to get a random fact about that animal.\n    let selectedAnimal = e.target.alt;\n    let animalFacts = Object.values(animals[selectedAnimal].facts);\n    let randomNumber= Math.floor(Math.random() * animalFacts.length);\n\n    this.setState({\n      displayFact: animalFacts[randomNumber]\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"main-container\">\n          <TextContainer\n            randomFact={ this.handleClick }\n            displayFact={ this.state.displayFact }\n          />\n          <div className=\"animals-container\">\n            <AnimalContainer\n              animalImage={ animals.camel.image }\n              randomFact={ this.handleClick }\n            />\n            <AnimalContainer\n              animalImage={ animals.dolphin.image }\n              randomFact={ this.handleClick }\n            />\n            <AnimalContainer\n              animalImage={ animals.snowLeopard.image }\n              randomFact={ this.handleClick }\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default MainContainer;","import React from 'react';\nimport './App.css';\nimport MainContainer from './components/MainContainer';\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"app-container\">\n        <h1 className=\"title\">Animal  Adaptations</h1>\n        <MainContainer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}